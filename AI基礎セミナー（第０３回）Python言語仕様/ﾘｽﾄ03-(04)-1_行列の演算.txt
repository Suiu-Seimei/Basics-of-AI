#*************************************************************************
#  ﾘｽﾄ03-(04)-1_行列の演算
#*************************************************************************
import numpy as np

# 行列 X(2行3列)、Y(2行3列)　の定義
print("・行列 X(2行3列)、Y(2行3列)　の定義")
x = np.array([[11,12,13],[21,22,23]])
y = np.array([[101,102,103],[201,202,203]])

gyou,retsu = x.shape
print(x, "\n", type(x), "x : 行＝" + str(gyou) + "　列＝" + str(retsu))
gyou,retsu = y.shape
print(y, "\n", type(y), "y : 行＝" + str(gyou) + "　列＝" + str(retsu))

# 行列の和
print("\n・行列の和")
gyou,retsu = (x+y).shape
print(x+y, "\n", type(x+y), "x+y : 行＝" + str(gyou) + "　列＝" + str(retsu))

# 行列の差
print("\n・行列の差")
gyou,retsu = (x-y).shape
print(x-y, "\n", type(x-y), "x-y : 行＝" + str(gyou) + "　列＝" + str(retsu))

# 行列の要素同士の積：アダマール積 (Hadamard product)
print("\n・行列の要素同士の積：アダマール積 (Hadamard product)")
gyou,retsu = (x*y).shape
print(x*y, "\n", type(x*y), "x*y : 行＝" + str(gyou) + "　列＝" + str(retsu))

# 行列の要素同士の割り算
print("\n・行列の要素同士の割り算")
gyou,retsu = (x/y).shape
print(x/y, "\n", type(x/y), "x/y : 行＝" + str(gyou) + "　列＝" + str(retsu))
