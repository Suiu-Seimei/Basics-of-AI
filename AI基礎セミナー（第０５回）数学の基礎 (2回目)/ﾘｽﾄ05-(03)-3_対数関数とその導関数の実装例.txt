#*************************************************
# ﾘｽﾄ05-(03)-3_対数関数とその導関数の実装例
#*************************************************
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

# 対数関数
def fLog(x, a):
    return  np.log(x) / np.log(a) 

# 対数関数の微分
def dfLog(x, a):
    return 1 /( x * np.log(a) )

# ネイピア数 e
e = np.exp(1) 

# x データ列
x = np.linspace(0.1, 5, 100)

# 対数関数とその導関数
y1 = fLog(x, 10)
y2 = fLog(x, e)
y3 = fLog(x, 0.1)
dy1 = dfLog(x, 10)
dy2 = dfLog(x, e)
dy3 = dfLog(x, 0.1)

# グラフ表示
plt.figure(figsize=(10,5))
plt.subplots_adjust(wspace=0.2, hspace=0.5)

# グラフ表示：対数関数 y=log10(x)
plt.subplot(1,3,1)
plt.title("(Log function $y=log10(x)$)")
plt.plot(x, y1, 'black', linewidth=2, label='$y=log10(x)$')
plt.plot(x, dy1, 'cornflowerblue', linewidth=2, label='$dy/dx=1/(x log(10))$', linestyle='--')
plt.ylim(-3, 3)
plt.xlim(0.1, 5)
plt.grid(True)
plt.legend(loc='lower right')

# グラフ表示：対数関数 y=loge(x)
plt.subplot(1,3,2)
plt.title("(Log function $y=loge(x)$)")
plt.plot(x, y2, 'black', linewidth=2, label='$y=loge(x)$')
plt.plot(x, dy2, 'cornflowerblue', linewidth=2, label='$dy/dx=1/x$', linestyle='--')
plt.ylim(-3, 3)
plt.xlim(0.1, 5)
plt.grid(True)
plt.legend(loc='lower right')

# グラフ表示：対数関数 y=log0.1(x)
plt.subplot(1,3,3)
plt.title("(Log function $y=log0.1(x)$)")
plt.plot(x, y3, 'black', linewidth=2, label='$y=log0.1(x)$')
plt.plot(x, dy3, 'cornflowerblue', linewidth=2, label='$dy/dx=1/(x log(0.1))$', linestyle='--')
plt.ylim(-3, 3)
plt.xlim(0.1, 5)
plt.grid(True)
plt.legend(loc='lower right')

plt.show()
