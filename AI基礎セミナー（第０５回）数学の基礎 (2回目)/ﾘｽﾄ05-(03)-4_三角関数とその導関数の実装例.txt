#*************************************************
# ﾘｽﾄ05-(03)-4_三角関数とその導関数の実装例
#*************************************************
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

# 三角関数 sin の微分
def dfSin(x):
    return np.cos(x)

# 三角関数 cos の微分
def dfCos(x):
    return  -1 * np.sin(x)

# 三角関数 tan の微分
def dfTan(x):
    return  1 / (np.cos(x))** 2

# x データ列 (0〜3π [rad])
x = np.linspace(0, 3*np.pi, 100)

# 三角関数とその導関数
y1 = np.sin(x)
y2 = np.cos(x)
y3 = np.tan(x)
dy1 = dfSin(x)
dy2 = dfCos(x)
dy3 = dfTan(x)

# グラフ表示
plt.figure(figsize=(14,5))
plt.subplots_adjust(wspace=0.2, hspace=0.5)

# グラフ表示：三角関数 y=sin(x)
plt.subplot(1,3,1)
plt.title("(Tri.function $y=sin(x)$)")
plt.plot(x, y1, 'black', linewidth=2, label='$y=sin(x)$')
plt.plot(x, dy1, 'cornflowerblue', linewidth=2, label='$dy/dx=cos(x)$', linestyle='--')
plt.ylim(-3, 3)
plt.xlim(0, 3*np.pi)
plt.xlabel("[rad]")
plt.grid(True)
plt.legend(loc='lower right')

# グラフ表示：三角関数 y=cos(x)
plt.subplot(1,3,2)
plt.title("(Tri.function $y=cos(x)$)")
plt.plot(x, y2, 'black', linewidth=2, label='$y=cos(x)$')
plt.plot(x, dy2, 'cornflowerblue', linewidth=2, label='$dy/dx=-sin(x)$', linestyle='--')
plt.ylim(-3, 3)
plt.xlim(0, 3*np.pi)
plt.xlabel("[rad]")
plt.grid(True)
plt.legend(loc='lower right')

# グラフ表示：三角関数 y=tan(x)
plt.subplot(1,3,3)
plt.title("(Tri.function $y=tan(x)$)")
plt.plot(x, y3, 'black', linewidth=2, label='$y=tan(x)$')
plt.plot(x, dy3, 'cornflowerblue', linewidth=2, label='$dy/dx=sec2(x)$', linestyle='--')
plt.ylim(-3, 3)
plt.xlim(0, 3*np.pi)
plt.xlabel("[rad]")
plt.grid(True)
plt.legend(loc='lower right')

plt.show()
