#********************************************************************/
# ﾘｽﾄ08-(05)-1_様々な活性化関数
#********************************************************************/
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

#(1) ｼｸﾞﾓｲﾄﾞ関数
def f_sigmoid(x):
    return 1 / ( 1 + np.exp(-x) )

#(2) ﾊｲﾊﾟﾎﾞﾘｯｸﾀﾝｼﾞｪﾝﾄ（双曲線正接関数）
def f_tanh(x):
    return  (np.exp(x) - np.exp(-x)) / (np.exp(x) + np.exp(-x))

#(3) ソフトサイン関数
def f_softsign(x):
    return  x / (np.abs(x) + 1)

#(4) 正規化線形関数（ランプ関数)
def f_ReLU(x):
    xcnt = len(x)
    ylist = np.zeros(xcnt)
    for ii in range(xcnt):
        if x[ii] < 0:
            ylist[ii] = 0
        else:
            ylist[ii] = x[ii]
    return ylist

#(6) 正規化線形関数（ランプ関数、上限＝6）
def f_ReLU6(x):
    xcnt = len(x)
    ylist = np.zeros(xcnt)
    for ii in range(xcnt):
        if x[ii] < 0:
            ylist[ii] = 0
        elif x[ii] > 6:
            ylist[ii] = 6
        else:
            ylist[ii] = xlist[ii]
    return ylist

#(7) ソフトプラス関数
def  f_softplus(x):
    return  np.log(np.exp(x) + 1)

#(8) Exponential Linear Unit
def  f_ELU(x):
    xcnt = len(x)
    ylist = np.zeros(xcnt)
    for ii in range(xcnt):
        if x[ii] < 0:
            ylist[ii] = np.exp(x[ii]) -1
        else:
            ylist[ii] = x[ii]
    return ylist

# x データ列
xlist = np.linspace(-10, 10, 100)

# y データ列
y_sigmoid = f_sigmoid(xlist)
y_tanh = f_tanh(xlist)
y_softsign = f_softsign(xlist)
y_ReLU = f_ReLU(xlist)
y_ReLU6 = f_ReLU6(xlist)
y_softplus = f_softplus(xlist)
y_ELU = f_ELU(xlist)
    
# グラフ表示
plt.figure(figsize=(14,5))
plt.subplots_adjust(wspace=0.2, hspace=0.5)

plt.subplot(1,3,1)
plt.plot(xlist, y_sigmoid, 'r--', label='1.Sigmoid', linewidth=2)
plt.plot(xlist, y_tanh, 'b:', label='2.Tanh', linewidth=2)
plt.plot(xlist, y_softsign, 'g-.', label='3.Softsign', linewidth=2)
plt.ylim([-2,7])
plt.legend(loc='upper left')

plt.subplot(1,3,2)
plt.plot(xlist, y_ReLU, 'b:', label='4.ReLU', linewidth=2)
plt.plot(xlist, y_softplus, 'r--', label='7.Softplus', linewidth=2)
plt.ylim([-2,7])
plt.legend(loc='upper left')

plt.subplot(1,3,3)
plt.plot(xlist, y_ReLU6, 'g-.', label='6.ReLU6', linewidth=2)
plt.plot(xlist, y_ELU, 'k-', label='8.ELU', linewidth=0.5)
plt.ylim([-2,7])
plt.legend(loc='upper left')

plt.show()
